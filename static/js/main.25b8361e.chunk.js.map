{"version":3,"sources":["Component/Title/Title.js","Component/Card/Card.js","Component/Project/Project.js","Component/Arrow/Arrow.js","App.js","serviceWorker.js","index.js"],"names":["Title","props","className","startDelay","onTypingDone","this","cursor","hideWhenDone","Backspace","count","Delay","ms","Component","Card","children","Project","src","Arrow","ArrowClasses","show","push","join","App","setState","projectDisplay","state","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sZA8CeA,E,YAvCb,WAAYC,GAAQ,qEACZA,I,sEAIN,OACE,6BACE,yBAAKC,UAAU,mBACX,kBAAC,IAAD,CAAQC,WAAY,KACpBC,aAAcC,KAAKJ,MAAMG,aACzBE,OAAQ,CAACC,cAAc,IAFvB,cAIA,kBAAC,IAAOC,UAAR,CAAkBC,MAAO,KAJzB,wBAMA,kBAAC,IAAOC,MAAR,CAAcC,GAAI,OAClB,6BACA,6BARA,8FAUA,kBAAC,IAAOD,MAAR,CAAcC,GAAI,OAClB,6BAXA,OAaA,kBAAC,IAAOD,MAAR,CAAcC,GAAI,MAClB,6BAdA,qHAgBA,kBAAC,IAAOD,MAAR,CAAcC,GAAI,OAClB,6BACA,6BAlBA,mDAoBA,kBAAC,IAAOD,MAAR,CAAcC,GAAI,OAClB,6BACA,6BAtBA,8B,GAVQC,aCaLC,G,wBAbb,WAAYZ,GAAQ,qEACZA,I,sEAIN,OACI,yBAAKC,UAAU,kBACVG,KAAKJ,MAAMa,c,GATLF,cCmDJG,E,YA/Cb,WAAYd,GAAQ,qEACZA,I,sEAQN,OACE,yBAAKC,UAAU,qBACb,yBAAKA,UAAU,OACb,8CAEF,yBAAKA,UAAU,OACb,kBAAC,EAAD,KACE,yBAAKc,IAAI,mBACT,4CAEF,kBAAC,EAAD,KACE,yBAAKA,IAAI,mBACR,kDAEH,kBAAC,EAAD,KACE,yBAAKA,IAAI,qBACR,gDAGL,yBAAKd,UAAU,OACf,kBAAC,EAAD,KACE,yBAAKc,IAAI,qBACR,mDAEH,kBAAC,EAAD,KACA,yBAAKA,IAAI,mBACN,yCAEH,kBAAC,EAAD,KACA,yBAAKA,IAAI,wBACN,oD,GAzCWJ,aCWPK,G,MAZD,SAAChB,GACX,IAAIiB,EAAe,CAAC,SAIpB,OAHIjB,EAAMkB,MACND,EAAaE,KAAK,QAGtB,yBAAKlB,UAAWgB,EAAaG,KAAK,MAAlC,kBC6BWC,E,YA9Bb,WAAYrB,GAAQ,IAAD,8BACjB,4CAAMA,KAMRG,aAAe,WACb,EAAKmB,SAAS,CACZC,gBAAgB,KAPlB,EAAKC,MAAQ,CACXD,gBAAgB,GAHD,E,sEAcjB,OACE,yBAAKtB,UAAU,QACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,CAAOE,aAAcC,KAAKD,gBAE5B,yBAAKF,UAAU,OACb,kBAAC,EAAD,CAAOiB,KAAMd,KAAKoB,MAAMD,kBAE1B,yBAAKtB,UAAU,OACZG,KAAKoB,MAAMD,eAAiB,kBAAC,EAAD,MAAc,W,GAzBnCZ,aCKEc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.25b8361e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Title.css';\n\nimport Typist from 'react-typist';\n\nclass Title extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"title-container\">\n            <Typist startDelay={1900}\n            onTypingDone={this.props.onTypingDone} \n            cursor={{hideWhenDone: true}}>\n            Hwllo, I am\n            <Typist.Backspace count={10} />\n            ello, I am Jialin Wu.\n            <Typist.Delay ms={1800}/>\n            <br></br>\n            <br></br>\n            I am a web developer üñ• and a student üë®‚Äçüéì at berkeley.\n            <Typist.Delay ms={1800} />\n            <br></br>\n            &nbsp;\n            <Typist.Delay ms={200} />\n            <br></br>\n            Here, you can find projects üóÇ that I have been working on and things  ‚úèÔ∏è that I have written.\n            <Typist.Delay ms={1800} />\n            <br></br>\n            <br></br>\n            To know more about me, scroll down. ‚¨áÔ∏è\n            <Typist.Delay ms={1800} />\n            <br></br>\n            <br></br>\n            Thanks for visiting.\n            </Typist>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport './Card.css';\n\nclass Card extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n        <div className=\"Card-container\"> \n            {this.props.children}\n        </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport './Project.css';\n\nimport Card from '../Card/Card'\n\nclass Project extends Component {\n\n  constructor(props) {\n    super(props);\n    // this.ProjectClasses = ['project-container'];\n    // if (props.show) {\n    //     this.ProjectClasses.push(\"show\")\n    // }\n  }\n\n  render() {\n    return (\n      <div className=\"project-container\"> \n        <div className=\"row\">\n          <h2> My Projects </h2>\n        </div>\n        <div className=\"row\">\n          <Card>\n            <img src=\"/img/admin.png\"/>\n            <h3> Admin Page</h3>\n          </Card>\n          <Card>\n            <img src=\"/img/dress.png\" />\n             <h3> Maison-Autelier </h3>\n          </Card>\n          <Card>\n            <img src=\"/img/library.png\" />\n             <h3> Project-Clio </h3>\n          </Card>\n        </div>\n        <div className=\"row\">\n        <Card>\n          <img src=\"/img/weather.png\" />\n           <h3> Weather Forecast </h3>\n        </Card>\n        <Card>\n        <img src=\"/img/piano.png\"  />\n           <h3> Pianoo </h3>\n        </Card>\n        <Card>\n        <img src=\"/img/react_logo.png\" />\n           <h3> React China </h3>\n        </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Project;\n","import React from 'react';\n\nimport './Arrow.css'\n\nconst Arrow = (props) => {\n    let ArrowClasses = ['Arrow'];\n    if (props.show) {\n        ArrowClasses.push(\"show\")\n    }\n    return (\n    <div className={ArrowClasses.join(' ')}>\n        ‚¨áÔ∏è\n    </div>\n    )\n}\n\nexport default Arrow;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Title from \"./Component/Title/Title\"\nimport Project from \"./Component/Project/Project\"\nimport Arrow from './Component/Arrow/Arrow'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectDisplay: false\n    }\n  }\n\n  onTypingDone = () => {\n    this.setState({\n      projectDisplay: true\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"row\">\n          <Title onTypingDone={this.onTypingDone}/>\n        </div>\n        <div className=\"row\">\n          <Arrow show={this.state.projectDisplay}/>\n        </div>\n        <div className=\"row\">\n          {this.state.projectDisplay ? <Project /> : null }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}